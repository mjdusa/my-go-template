---
name: semgrep

on:
  # Scan on-demand through GitHub Actions interface:
  workflow_dispatch: {}
  # Scan workflow call:
  workflow_call:
  # Scan mainline branches and report all findings:
  push:
    branches: ["master", "main"]
  # Scan changed files in PRs (diff-aware scanning):
  pull_request:
    branches: ["master", "main"]
  # Schedule the CI job (this method uses cron syntax):
  schedule:
    - cron: "0 12 * * *" # Sets Semgrep to scan every day at 12:00 UTC / 6:00 CST

# Don't grant any access by default
permissions: {}

env:
  target_ref: ${{ github.head_ref || github.ref_name }}

jobs:
  semgrep:
    name: semgrep
    strategy:
      matrix:
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}

    ############################################
    # Grant status permission for MULTI_STATUS #
    ############################################
    permissions:
      contents: read
      packages: read
      statuses: write

    container:
      # A Docker image with Semgrep installed. Do not change this.
      image: semgrep/semgrep

    # Skip any PR created by dependabot to avoid permission issues:
    if: (github.actor != 'dependabot[bot]')

    steps:
      - name: actions/checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          repository: ${{ github.repository }}
          ref: ${{ env.target_ref }}
          token: ${{ github.token }}
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your
          #                             personal access token.
          fetch-depth: 0

      - name: semgrep ci
        run: semgrep ci # Run the "semgrep ci" command on the command line of the docker image.
        env:
          # Connect to Semgrep Cloud Platform through your SEMGREP_APP_TOKEN.
          # Generate a token from Semgrep Cloud Platform > Settings
          # and add it to your GitHub secrets.
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
