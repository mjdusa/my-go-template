name: Build - Build Application Release

on:
  workflow_dispatch:

  workflow_call:

  push:

  pull_request:

env:
  target_ref: ${{ github.head_ref || github.ref_name }}
  GO111MODULE: on
  GOPRIVATE: ''

jobs:
  build:
    strategy:
      matrix:
        go-version: [1.21.x]
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: actions/checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
        with:
          repository: ${{ github.repository }}
          ref: ${{ env.target_ref }}
          token: ${{ github.token }}

      - name: actions/setup-go
        uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # v4.1.0
        with:
          go-version: ${{ matrix.go-version }}

      - name: go version
        run: go version

      - name: go clean --cache
        run: go clean --cache

      - name: pre-build
        id: prebuild
        run: |
          echo "pre-building"
          goversion=$(go version)
          echo "goversion=${goversion}"
          echo "::set-output name=goversion::${goversion}"
          appversion=$(cat .version)
          echo "appversion=${appversion}"
          echo "::set-output name=appversion::${appversion}"
          buildtime=$(date -u "+%Y-%m-%dT%TZ")
          echo "buildtime=${buildtime}"
          echo "::set-output name=buildtime::${buildtime}"

      - name: go build
        run: |
          echo "building"
          go env
          mkdir dist
          go build -x -v -ldflags="-s -w -X 'internal/version.AppVersion=${{ steps.prebuild.outputs.appversion }}' -X 'internal/version.Branch=${{ env.target_ref }}' -X 'internal/version.BuildTime=${{ steps.prebuild.outputs.buildtime }}' -X 'internal/version.Commit=${{ github.sha }}' -X 'internal/version.GoVersion=${{ steps.prebuild.outputs.goversion }}'" -o dist/my-go-template-app cmd/my-go-template-app/main.go
